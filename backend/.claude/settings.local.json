{
  "permissions": {
    "allow": [
      "Bash(poetry run pytest tests/integration/test_order_repository.py::TestOrderRepository::test_get_by_user -v)",
      "Bash(poetry run pytest tests/integration/test_order_repository.py::TestOrderRepository::test_get_by_user -vv --tb=short)",
      "Bash(poetry run pytest --tb=no -q)",
      "Bash(poetry run pytest tests/integration/test_recipe_repository.py::TestRecipeRepository::test_update_recipe_ingredients -vv --tb=short)",
      "Bash(poetry run pytest tests/integration/test_recipe_repository.py::TestRecipeRepository::test_update_recipe_ingredients tests/integration/test_recipe_repository.py::TestRecipeRepository::test_remove_recipe_ingredient -v --tb=short)",
      "Bash(poetry run pytest tests/test_orders.py::TestOrders::test_create_order_success -vv --tb=short)",
      "Bash(poetry run pytest tests/test_orders.py::TestOrders::test_delete_order -vv --tb=short)",
      "Bash(poetry run pytest tests/test_api_errors.py::TestAPIErrorHandling::test_duplicate_ingredient_name tests/test_orders.py::TestOrders::test_create_order_success tests/test_orders.py::TestOrders::test_delete_order tests/test_orders.py::TestOrders::test_create_order_with_multiple_items -v --tb=short)",
      "Bash(poetry run pytest tests/test_orders.py::TestOrders::test_create_order_with_multiple_items -vv --tb=short)",
      "Bash(poetry run pytest tests/test_api_errors.py::TestAPIErrorHandling::test_duplicate_ingredient_name -vv --tb=short)",
      "Bash(poetry run pytest tests/test_orders.py tests/test_orders.py::TestOrders::test_create_order_with_multiple_items -v --tb=no)",
      "Bash(poetry run pytest --ignore=tests/test_api_errors.py -v --tb=no --co -q)",
      "Bash(poetry run pytest --ignore=tests/test_api_errors.py --tb=no -q)",
      "Bash(poetry run pytest --cov=src --cov-report=term-missing --cov-report=html -v --tb=no)",
      "Bash(poetry run pytest --cov=src --cov-report=term --cov-report=html --tb=no -q)",
      "Bash(poetry run pytest tests/unit/test_entities.py::TestMoneyValueObject::test_money_comparison -vv --tb=short)",
      "Bash(poetry run pytest tests/unit/test_repositories_coverage.py::TestIngredientRepositoryCoverage::test_get_by_unit -vv --tb=short)",
      "Bash(poetry run pytest --cov=src --cov-report=term --cov-report=html -v --tb=no)",
      "Bash(poetry run pytest tests/test_routes_edge_cases.py::TestRecipesRoutesEdgeCases::test_update_recipe_remove_ingredient -vv --tb=short)"
    ],
    "deny": [],
    "ask": []
  }
}
